server:
  port: 9000
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:mem:testdb
    username: root
    password: ''
  jpa:
    generate-ddl: true
    show-sql: false
    database: h2
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
  cloud:
    stream:
      kafka:
        binder:
          brokers:
            - localhost:9092
      bindings:
        validationRequest-out-0:
          destination: validation-request
        validationResult-in-0:
          destination: validation-results
          group: ${spring.application.name}
        sendAllocationRequest-out-0:
          destination: allocation-request
        allocationResult-in-0:
          destination: allocation-result
          group: ${spring.application.name}
        sendDealocateOrderRequest-out-0:
          destination: dealocate-order-request
    function:
      definition: validationRequest;validationResult;sendAllocationRequest;allocationResult;sendDealocateOrderRequest

eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: localhost


management:
  endpoint:
    metrics:
      enabled: true
    health:
      enabled: true
      probes:
        enabled: true
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true


endpoints:
  shutdown:
    enabled: true
encrypt:
  key: "123456789"
beerserviceurl: http://localhost:8080


logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"